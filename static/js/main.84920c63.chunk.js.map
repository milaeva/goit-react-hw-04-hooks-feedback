{"version":3,"sources":["components/Button/Button.js","components/Statistics/Statistics.js","App.js","index.js","components/Statistics/Statistics.module.css","components/Button/Button.module.css"],"names":["Button","buttonName","increment","className","s","list","button","onClick","Statistics","good","neutral","bad","total","percantage","item","App","useState","setGood","setNeutral","setBad","prevstate","countTotalFeedback","map","el","Math","floor","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"qQAEe,SAASA,EAAT,GAA4C,IAA1BC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,UAC3C,OACE,oBAAIC,UAAWC,IAAEC,KAAjB,SACE,wBAAQF,UAAWC,IAAEE,OAAQC,QAAS,kBAAML,EAAUD,IAAtD,SACGA,M,oBCJM,SAASO,EAAT,GAAgE,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,WAC9D,OACE,qBAAIV,UAAWC,IAAEC,KAAjB,UACE,6BACE,oBAAGF,UAAWC,IAAEU,KAAhB,mBAA6BL,OAE/B,6BACE,oBAAGN,UAAWC,IAAEU,KAAhB,sBAAgCJ,OAElC,6BACE,oBAAGP,UAAWC,IAAEU,KAAhB,kBAA4BH,OAE9B,6BACE,oBAAGR,UAAWC,IAAEU,KAAhB,oBAA8BF,EAA9B,SAEF,6BACE,oBAAGT,UAAWC,IAAEU,KAAhB,gCAA0CD,EAA1C,YCdO,SAASE,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOP,EAAP,KAAaQ,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAON,EAAP,KAAgBQ,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOL,EAAP,KAAYQ,EAAZ,KAIMjB,EAAY,SAACD,GACjB,OAAQA,GACN,IAAK,OACHgB,GAAQ,SAACG,GAAD,OAAeA,EAAY,KACnC,MACF,IAAK,UACHF,GAAW,SAACE,GAAD,OAAeA,EAAY,KACtC,MACF,IAAK,MACHD,GAAO,SAACC,GAAD,OAAeA,EAAY,KAClC,MACF,QACE,SAIAC,EAAqB,WAEzB,OADcZ,EAAOC,EAAUC,GASjC,OACE,sBAAKR,UAAU,YAAf,UACE,sBAAKA,UAAU,UAAf,UACE,sDACA,oBAAIA,UAAU,OAAd,SAhCU,CAAC,OAAQ,UAAW,OAiCnBmB,KAAI,SAACC,GAAD,OACX,cAACvB,EAAD,CAAiBC,WAAYsB,EAAIrB,UAAWA,GAA/BqB,WAInB,sBAAKpB,UAAU,sBAAf,UACE,2CAC0B,IAAzBkB,IACC,kDAEA,cAACb,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOS,IACPR,WAxBWW,KAAKC,MAAO,IAAMJ,IAAwBZ,WC3BjEiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACb,EAAD,MAEFc,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,kBCAzDD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,wB","file":"static/js/main.84920c63.chunk.js","sourcesContent":["import s from \"./Button.module.css\";\n\nexport default function Button({ buttonName, increment }) {\n  return (\n    <li className={s.list}>\n      <button className={s.button} onClick={() => increment(buttonName)}>\n        {buttonName}\n      </button>\n    </li>\n  );\n}\n","import s from \"./Statistics.module.css\";\n\nexport default function Statistics({ good, neutral, bad, total, percantage }) {\n  return (\n    <ul className={s.list}>\n      <li>\n        <p className={s.item}>Good: {good}</p>\n      </li>\n      <li>\n        <p className={s.item}>Neutral: {neutral}</p>\n      </li>\n      <li>\n        <p className={s.item}>Bad: {bad}</p>\n      </li>\n      <li>\n        <p className={s.item}>Total: {total} </p>\n      </li>\n      <li>\n        <p className={s.item}>Positive feedback: {percantage}%</p>\n      </li>\n    </ul>\n  );\n}\n","import { useState } from \"react\"\nimport Button from \"./components/Button/Button\"\nimport Statistics from \"./components/Statistics/Statistics\"\n\nexport default function App() {\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const buttons = [\"good\", \"neutral\", \"bad\"]\n\n  const increment = (buttonName) => {\n    switch (buttonName) {\n      case \"good\":\n        setGood((prevstate) => prevstate + 1)\n        break\n      case \"neutral\":\n        setNeutral((prevstate) => prevstate + 1)\n        break\n      case \"bad\":\n        setBad((prevstate) => prevstate + 1)\n        break\n      default:\n        return\n    }\n  }\n\n  const countTotalFeedback = () => {\n    const total = good + neutral + bad\n    return total\n  }\n\n  const countPositiveFeedbackPercentage = () => {\n    const percentage = Math.floor((100 / countTotalFeedback()) * good)\n    return percentage\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"section\">\n        <p>Please leave feedback</p>\n        <ul className=\"list\">\n          {buttons.map((el) => (\n            <Button key={el} buttonName={el} increment={increment} />\n          ))}\n        </ul>\n      </div>\n      <div className=\"feedback-statistics\">\n        <p>Statistics</p>\n        {countTotalFeedback() === 0 ? (\n          <p>No feedback given</p>\n        ) : (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            percantage={countPositiveFeedbackPercentage()}\n          />\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__29f_f\",\"item\":\"Statistics_item__3H8GS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__39zjv\",\"list\":\"Button_list__3ecBE\"};"],"sourceRoot":""}